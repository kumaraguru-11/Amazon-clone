{"version":3,"file":"static/js/335.8ef82042.chunk.js","mappings":"4NAOA,MAiHA,EAjHsBA,KAAO,IAADC,EAAAC,EAAAC,EAC1B,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,GAEjCC,GAASC,EAAAA,EAAAA,KACTC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,cAAcH,WAEpDI,EAAYC,GAAiBC,EAAAA,GAAQC,cAY5CC,EAAAA,EAAAA,YAAU,KACRV,GAASW,EAAAA,EAAAA,IAAoBb,EAAOc,IAAI,GACvC,CAACZ,EAAUF,IAEd,MAAMe,EAAeX,IAEnB,IAAIY,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,GAGvD,MAAMC,EAAuBL,EAAKM,WAC/BC,GAASA,EAAKC,YAAcpB,EAAQqB,MAET,IAA1BJ,EAEFL,EAAKK,GAAsBK,SAAW7B,EAGtCmB,EAAKW,KAAK,CAAEH,UAAWpB,EAAQqB,GAAIC,SAAU7B,IAI/CsB,aAAaS,QAAQ,OAAQX,KAAKY,UAAUb,IA9B5CR,EAAWsB,KAAK,CACdC,KAAM,UACNC,QAAS,aACTC,MAAO,CACLC,UAAW,QA2BN,EAGX,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qBAAoBC,UACjCC,EAAAA,EAAAA,KAAA,OAAKC,IAAKnC,EAAQoC,MAAOC,IAAKrC,EAAQsC,WAIxCP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,MAAAD,SAAKjC,EAAQsC,SAEbJ,EAAAA,EAAAA,KAAA,UAEAA,EAAAA,EAAAA,KAACK,EAAAA,EAAM,CACLC,aAAqB,OAAPxC,QAAO,IAAPA,GAAe,QAARV,EAAPU,EAASyC,cAAM,IAAAnD,OAAR,EAAPA,EAAiBoD,KAC/BC,SAAS,OACTC,KAAM,MAGRV,EAAAA,EAAAA,KAAA,UACAH,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAA,KAAAY,OAAU7C,EAAQ8C,UAClBf,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAACa,EAAAA,GAAM,CACLf,UAAU,uBACVgB,QAASA,IAAMtD,EAAWD,EAAU,GACpCwD,SAAUxD,GAAW,EAAEwC,SACxB,OAGDC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,OAAMC,SAAExC,KACxByC,EAAAA,EAAAA,KAACa,EAAAA,GAAM,CACLpB,KAAK,UACLqB,QAASA,IAAMtD,EAAWD,EAAU,GACpCwD,SAAUxD,IAAkB,OAAPO,QAAO,IAAPA,GAAe,QAART,EAAPS,EAASyC,cAAM,IAAAlD,OAAR,EAAPA,EAAiB2D,OAAMjB,SAC7C,OAIDC,EAAAA,EAAAA,KAACa,EAAAA,GAAM,CACLf,UAAU,uBACVL,KAAK,OACLqB,QAASA,KACPrC,EAAYX,EAAQ,EAGtBiC,SACD,gBAGA5B,SAIL6B,EAAAA,EAAAA,KAAA,UAEAH,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,YACIC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,yBAAwBC,SAAC,cAAgB,IAAAY,OACrD,OAAP7C,QAAO,IAAPA,GAAe,QAARR,EAAPQ,EAASyC,cAAM,IAAAjD,OAAR,EAAPA,EAAiB0D,MAAK,SAG7BhB,EAAAA,EAAAA,KAAA,UAEAA,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAIjC,EAAQmD,mBAEV,C","sources":["Pages/ProductDetail.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { fetchSingleProducts } from \"../FetchingApi/API/FetchSingleProduct\";\r\nimport { Rating } from \"react-simple-star-rating\";\r\nimport { Button, message} from \"antd\";\r\n\r\nconst ProductDetail = () => {\r\n  const [addItem, setAddItem] = useState(1);\r\n\r\n  const params = useParams();\r\n  const dispatch = useDispatch();\r\n  const product = useSelector((state) => state.singleProduct.product);\r\n  //antDesign\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n\r\n  const success = () => {\r\n    messageApi.open({\r\n      type: \"success\",\r\n      content: \"Cart Added\",\r\n      style: {\r\n        marginTop: \"5vh\",\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchSingleProducts(params.Id));\r\n  }, [dispatch, params]);\r\n\r\n  const handleClick = (product) => {\r\n    // Retrieve the existing cart array from localStorage, or initialize an empty array\r\n    let cart = JSON.parse(localStorage.getItem(\"cart\")) || [];\r\n\r\n    // Check if the product is already in the cart\r\n    const existingProductIndex = cart.findIndex(\r\n      (item) => item.productId === product.id\r\n    );\r\n    if (existingProductIndex !== -1) {\r\n      // If the product is already in the cart, update the quantity\r\n      cart[existingProductIndex].quantity = addItem;\r\n    } else {\r\n      // If the product is not in the cart, add it to the cart array\r\n      cart.push({ productId: product.id, quantity: addItem });\r\n    }\r\n\r\n    // Store the updated cart array back in localStorage\r\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n    success();\r\n  };\r\n\r\n  return (\r\n    <div className=\"product-detail\">\r\n      <div className=\"product-detail-img\">\r\n        <img src={product.image} alt={product.title} />\r\n      </div>\r\n\r\n      {/* Products Detail*/}\r\n      <div className=\"product-detail-info\">\r\n        <h3>{product.title}</h3>\r\n\r\n        <hr />\r\n\r\n        <Rating\r\n          initialValue={product?.rating?.rate}\r\n          readonly=\"true\"\r\n          size={20}\r\n        />\r\n\r\n        <hr />\r\n        <div>\r\n          <h4>{`$ ${product.price}`}</h4>\r\n          <div className=\"my-3\">\r\n            <Button\r\n              className=\"bg-danger text-light\"\r\n              onClick={() => setAddItem(addItem - 1)}\r\n              disabled={addItem <= 1}\r\n            >\r\n              -\r\n            </Button>\r\n            <span className=\"mx-3\">{addItem}</span>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => setAddItem(addItem + 1)}\r\n              disabled={addItem >= product?.rating?.count}\r\n            >\r\n              +\r\n            </Button>\r\n\r\n            <Button\r\n              className=\"ms-4 bg-warning fw-1\"\r\n              type=\"text\"\r\n              onClick={() => {\r\n                handleClick(product);\r\n              }}\r\n              // onClick={success}\r\n              // onClick={()=>dispatch(addCart(product.id))}\r\n            >\r\n              Add to Cart\r\n            </Button>\r\n            {contextHolder}\r\n          </div>\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <span>\r\n          status: <span className=\"text-success fw-bolder\">In Stock </span>\r\n          {`(${product?.rating?.count})`}\r\n        </span>\r\n\r\n        <hr />\r\n\r\n        <h5>Description:</h5>\r\n        <p>{product.description}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductDetail;\r\n"],"names":["ProductDetail","_product$rating","_product$rating2","_product$rating3","addItem","setAddItem","useState","params","useParams","dispatch","useDispatch","product","useSelector","state","singleProduct","messageApi","contextHolder","message","useMessage","useEffect","fetchSingleProducts","Id","handleClick","cart","JSON","parse","localStorage","getItem","existingProductIndex","findIndex","item","productId","id","quantity","push","setItem","stringify","open","type","content","style","marginTop","_jsxs","className","children","_jsx","src","image","alt","title","Rating","initialValue","rating","rate","readonly","size","concat","price","Button","onClick","disabled","count","description"],"sourceRoot":""}