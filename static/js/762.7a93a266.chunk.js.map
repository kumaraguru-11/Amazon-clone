{"version":3,"file":"static/js/762.7a93a266.chunk.js","mappings":"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","sources":["cart/Payement.jsx","cart/Steps.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport StepsBar from \"./Steps\";\r\nimport { Input, Button, Modal } from \"antd\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Loader from \"../Components/Loading\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Payement = () => {\r\n  const cartQty = useSelector((state) => state.user.cartQty);\r\n  const product = useSelector((state) => state.singleProduct.multipleProduct);\r\n\r\n  const Total =\r\n    cartQty &&\r\n    cartQty.reduce((acc, curr) => {\r\n      // Find the matching item in quantity\r\n      const item = product.find((item) => item.id === curr.productId);\r\n      // Calculate the cost for the current product\r\n      const cost = item ? item.price * curr.quantity : 0;\r\n\r\n      // Add the cost to the accumulator\r\n      return parseInt(acc + cost);\r\n    }, 0);\r\n\r\n  const Tax = parseInt(Number(0.08 * Total));\r\n\r\n  const [cardNumber, setCardNumber] = useState(\"\");\r\n  const [cardExpiry, setCardExpiry] = useState(\"\");\r\n  const [cardCvc, setCardCvc] = useState(\"\");\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const cardnumber = useRef(null);\r\n  const cardexpiry = useRef(null);\r\n  const cardcvc = useRef(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  //change focus to the next input filed\r\n  const handleKeyDown = (e, nextRef) => {\r\n    if (nextRef === null) return;\r\n\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      nextRef.current.focus();\r\n    }\r\n  };\r\n\r\n  const handleCardNumberChange = (e) => {\r\n    let value = e.target.value;\r\n    // Format card number as XXXX XXXX XXXX XXXX\r\n    value = value.replace(/\\D/g, \"\").substring(0, 16);\r\n    value = value.replace(/(\\d{4})(?=\\d)/g, \"$1 \");\r\n    setCardNumber(value);\r\n  };\r\n\r\n  const handleCardExpiryChange = (e) => {\r\n    let value = e.target.value;\r\n    // Format card expiry as MM/YY\r\n    value = value.replace(/\\D/g, \"\").substring(0, 4);\r\n    value = value.replace(/(\\d{2})(?=\\d)/g, \"$1/\");\r\n    setCardExpiry(value);\r\n  };\r\n\r\n  const handleCardCvcChange = (e) => {\r\n    let value = e.target.value;\r\n    // Format card CVC as CVC\r\n    setCardCvc(value);\r\n  };\r\n\r\n  const handlePayment = async () => {\r\n   if(cardNumber && cardExpiry && cardCvc){\r\n     setIsModalOpen(true);\r\n\r\n     await new Promise((resolve) => {\r\n       setTimeout(() => {\r\n         setIsModalOpen(false);\r\n         resolve();\r\n       }, 2000);\r\n     });\r\n\r\n     //navigate after 2sec\r\n     navigate(\"/payment/success\");\r\n   }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        minHeight: \"91vh\",\r\n        height: \"100%\",\r\n        overflowY: \"scroll\",\r\n        width: \"100vw\",\r\n      }}\r\n      className=\"p-4 d-flex flex-column\"\r\n    >\r\n      <StepsBar currentValue={2} />\r\n      <div\r\n        className=\" p-4 border rounded mt-5 mx-auto\"\r\n        style={{\r\n          maxWidth: \"25rem\",\r\n          boxShadow: \"2px -1px 20px -4px rgba(0,0,0,0.75)\",\r\n        }}\r\n      >\r\n        <h3 className=\"mt-3\">Card Info</h3>\r\n\r\n        <label className=\"mt-3\">Card Number</label>\r\n        <Input\r\n          className=\"mt-2\"\r\n          placeholder=\"XXXX XXXX XXXX\"\r\n          value={cardNumber}\r\n          onChange={handleCardNumberChange}\r\n          ref={cardnumber}\r\n          onKeyDown={(e) => handleKeyDown(e, cardexpiry)}\r\n        />\r\n\r\n        <label className=\"mt-3\">Card Expiry</label>\r\n        <Input\r\n          className=\"mt-2\"\r\n          placeholder=\"MM/YY\"\r\n          value={cardExpiry}\r\n          onChange={handleCardExpiryChange}\r\n          ref={cardexpiry}\r\n          onKeyDown={(e) => handleKeyDown(e, cardcvc)}\r\n        />\r\n\r\n        <label className=\"mt-3\">Card CVC</label>\r\n        <Input\r\n          className=\"mt-2\"\r\n          placeholder=\"CVC\"\r\n          value={cardCvc}\r\n          onChange={handleCardCvcChange}\r\n          ref={cardcvc}\r\n          onKeyDown={(e) => handleKeyDown(e, null)}\r\n        />\r\n\r\n        <Button\r\n          type=\"primary\"\r\n          className=\" mt-3 w-100\"\r\n          size=\"large\"\r\n          onClick={() => handlePayment()}\r\n        >\r\n          {`Pay - ${Total + Tax}`}\r\n        </Button>\r\n      </div>\r\n      {/* FAKE PAYMENT LOADING  */}\r\n      <Modal\r\n        open={isModalOpen}\r\n        cancelText\r\n        footer={null}\r\n        style={{ height: \"10px\" }}\r\n      >\r\n        <Loader />\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payement;\r\n","import React from \"react\";\r\nimport { Steps } from \"antd\";\r\n\r\nconst StepsBar = ({currentValue}) => {\r\n  return (\r\n    <div className=\"mt-2 p-2\">\r\n      <Steps\r\n        progressDot\r\n        current={currentValue}\r\n        items={[\r\n          {\r\n            title: \"Shipping\",\r\n          },\r\n          {\r\n            title: \"Conform Order\",\r\n          },\r\n          {\r\n            title: \"Payment\",\r\n          },\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StepsBar;\r\n"],"names":["Payement","cartQty","useSelector","state","user","product","singleProduct","multipleProduct","Total","reduce","acc","curr","item","find","id","productId","cost","price","quantity","parseInt","Tax","Number","cardNumber","setCardNumber","useState","cardExpiry","setCardExpiry","cardCvc","setCardCvc","isModalOpen","setIsModalOpen","cardnumber","useRef","cardexpiry","cardcvc","navigate","useNavigate","handleKeyDown","e","nextRef","key","preventDefault","current","focus","_jsxs","style","minHeight","height","overflowY","width","className","children","_jsx","StepsBar","currentValue","maxWidth","boxShadow","Input","placeholder","value","onChange","target","replace","substring","ref","onKeyDown","Button","type","size","onClick","async","Promise","resolve","setTimeout","handlePayment","concat","Modal","open","cancelText","footer","Loader","_ref","Steps","progressDot","items","title"],"sourceRoot":""}