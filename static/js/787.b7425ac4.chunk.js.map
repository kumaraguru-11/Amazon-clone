{"version":3,"file":"static/js/787.b7425ac4.chunk.js","mappings":"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","sources":["cart/Shipping.jsx","cart/Steps.jsx"],"sourcesContent":["import React, { useRef } from \"react\";\r\nimport { Input, Button } from \"antd\";\r\nimport StepsBar from \"./Steps\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { shippingDetail } from \"../FetchingApi/Slice/userSlice\";\r\n\r\nconst Shipping = () => {\r\n  const [shippingInfo, setShippingInfo] = React.useState({\r\n    address: \"\",\r\n    city: \"\",\r\n    phone: \"\",\r\n    postalCode: \"\",\r\n    country: \"\",\r\n    state: \"\",\r\n  });\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const addressRef = useRef(null);\r\n  const cityRef = useRef(null);\r\n  const phoneRef = useRef(null);\r\n  const postalCodeRef = useRef(null);\r\n  const countryRef = useRef(null);\r\n  const stateRef = useRef(null);\r\n\r\n  //change focus to the next input filed\r\n  const handleKeyDown = (e, nextRef) => {\r\n    if (nextRef === null) return;\r\n\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      nextRef.current.focus();\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    // Check if all fields are filled\r\n    if (\r\n      !shippingInfo.address ||\r\n      !shippingInfo.city ||\r\n      !shippingInfo.phone ||\r\n      !shippingInfo.postalCode ||\r\n      !shippingInfo.country ||\r\n      !shippingInfo.state\r\n    ) {\r\n      alert(\"Please fill in all fields\");\r\n      return;\r\n    } else {\r\n      dispatch(shippingDetail(shippingInfo));\r\n\r\n      navigate(\"/conformOrder\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        minHeight: \"91vh\",\r\n        height: \"100%\",\r\n        overflowY: \"scroll\",\r\n        width: \"100vw\",\r\n      }}\r\n      className=\"p-4 d-flex flex-column\"\r\n    >\r\n      <StepsBar currentValue={0} />\r\n\r\n      <div\r\n        className=\" p-4 border rounded mt-5 mx-auto\"\r\n        style={{\r\n          maxWidth: \"25rem\",\r\n          boxShadow: \"2px -1px 20px -4px rgba(0,0,0,0.75)\",\r\n        }}\r\n      >\r\n        <h3 className=\"mt-3\">Shipping Info</h3>\r\n\r\n        <label className=\"mt-2\">Address</label>\r\n        <Input\r\n          className=\"mt-2\"\r\n          onChange={(event) => {\r\n            setShippingInfo({\r\n              ...shippingInfo,\r\n              address: event.target.value,\r\n            });\r\n          }}\r\n          ref={addressRef}\r\n          onKeyDown={(e) => handleKeyDown(e, cityRef)}\r\n        />\r\n\r\n        <label className=\"mt-3\">City</label>\r\n        <Input\r\n          className=\"mt-2\"\r\n          onChange={(event) => {\r\n            setShippingInfo({ ...shippingInfo, city: event.target.value });\r\n          }}\r\n          ref={cityRef}\r\n          onKeyDown={(e) => handleKeyDown(e, phoneRef)}\r\n        />\r\n\r\n        <label className=\"mt-3\">Phone No</label>\r\n        <Input\r\n          type=\"number\"\r\n          className=\"mt-2\"\r\n          onChange={(event) => {\r\n            setShippingInfo({ ...shippingInfo, phone: event.target.value });\r\n          }}\r\n          ref={phoneRef}\r\n          onKeyDown={(e) => handleKeyDown(e, postalCodeRef)}\r\n        />\r\n\r\n        <label className=\"mt-3\">Postal Code</label>\r\n        <Input\r\n          type=\"number\"\r\n          className=\"mt-2\"\r\n          onChange={(event) => {\r\n            setShippingInfo({\r\n              ...shippingInfo,\r\n              postalCode: event.target.value,\r\n            });\r\n          }}\r\n          ref={postalCodeRef}\r\n          onKeyDown={(e) => handleKeyDown(e, countryRef)}\r\n        />\r\n\r\n        <label className=\"mt-3\">Country</label>\r\n        <Input\r\n          className=\"mt-2\"\r\n          onChange={(event) => {\r\n            setShippingInfo({\r\n              ...shippingInfo,\r\n              country: event.target.value,\r\n            });\r\n          }}\r\n          ref={countryRef}\r\n          onKeyDown={(e) => handleKeyDown(e, stateRef)}\r\n        />\r\n\r\n        <label className=\"mt-3\">State</label>\r\n        <Input\r\n          className=\"mt-2\"\r\n          onChange={(event) => {\r\n            setShippingInfo({ ...shippingInfo, state: event.target.value });\r\n          }}\r\n          ref={stateRef}\r\n          onKeyDown={(e) => handleKeyDown(e, null)}\r\n        />\r\n\r\n        <Button\r\n          type=\"primary\"\r\n          className=\" mt-3 w-100\"\r\n          onClick={() => handleSubmit()}\r\n        >\r\n          CONTINUE\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shipping;\r\n","import React from \"react\";\r\nimport { Steps } from \"antd\";\r\n\r\nconst StepsBar = ({currentValue}) => {\r\n  return (\r\n    <div className=\"mt-2 p-2\">\r\n      <Steps\r\n        progressDot\r\n        current={currentValue}\r\n        items={[\r\n          {\r\n            title: \"Shipping\",\r\n          },\r\n          {\r\n            title: \"Conform Order\",\r\n          },\r\n          {\r\n            title: \"Payment\",\r\n          },\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StepsBar;\r\n"],"names":["Shipping","shippingInfo","setShippingInfo","React","address","city","phone","postalCode","country","state","navigate","useNavigate","dispatch","useDispatch","addressRef","useRef","cityRef","phoneRef","postalCodeRef","countryRef","stateRef","handleKeyDown","e","nextRef","key","preventDefault","current","focus","_jsxs","style","minHeight","height","overflowY","width","className","children","_jsx","StepsBar","currentValue","maxWidth","boxShadow","Input","onChange","event","target","value","ref","onKeyDown","type","Button","onClick","shippingDetail","alert","_ref","Steps","progressDot","items","title"],"sourceRoot":""}